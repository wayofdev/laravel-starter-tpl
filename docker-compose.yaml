---

services:
  app:
    image: wayofdev/php-dev:8.3-fpm-alpine-latest
    container_name: ${COMPOSE_PROJECT_NAME}-app
    restart: on-failure
    networks:
      - default
      - shared
    depends_on:
      - database
    links:
      - database
    external_links:
      - 'rabbitmq.${COMPOSE_PROJECT_NAME}.alias:rabbitmq'
    volumes:
      - ./.github/assets:/assets:rw,cached
      - ./app:/app:rw,cached
      - ./.env:/app/.env
      - ~/.composer:/.composer
      # SSH agent forwarding on unix sockets won't work
      # https://medium.com/@vanuan/ssh-and-docker-compose-7bce10b67765
      # Reverting to mounting the ssh folder
      - ~/.ssh:/home/www-data/.ssh
    environment:
      FAKETIME: '+2h'
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      PHIVE_HOME: /app/.phive
    dns:
      8.8.8.8
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  web:
    image: wayofdev/nginx:k8s-alpine-latest
    container_name: ${COMPOSE_PROJECT_NAME}-web
    restart: on-failure
    networks:
      - default
      - shared
    depends_on:
      - app
    links:
      - app
    volumes:
      - ./app:/app:rw,cached
      - ./.env:/app/.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.api-${COMPOSE_PROJECT_NAME}-secure.rule=Host(`api.${COMPOSE_PROJECT_NAME}.docker`)
      - traefik.http.routers.api-${COMPOSE_PROJECT_NAME}-secure.entrypoints=websecure
      - traefik.http.routers.api-${COMPOSE_PROJECT_NAME}-secure.tls=true
      - traefik.http.services.api-${COMPOSE_PROJECT_NAME}-secure.loadbalancer.server.port=8880
      - traefik.docker.network=network.${SHARED_SERVICES_NAMESPACE}

  database:
    image: wayofdev/postgres:15-alpine-latest
    container_name: ${COMPOSE_PROJECT_NAME}-database
    restart: on-failure
    networks:
      - default
      - shared
    ports:
      - '${DB_FORWARD_PORT:-5432}:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - database-data:/var/lib/postgresql/data:cached
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${DB_USERNAME:-cycle}', '-d', '${DB_DATABASE:-default}']
      interval: 3s
      timeout: 1s
      retries: 10

  redis:
    image: redis:7.2.5-alpine3.19
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    restart: on-failure
    networks:
      - default
      - shared
    ports:
      - '${REDIS_FORWARD_PORT:-6379}:6379'
    volumes:
      - redis-data:/data:cached

  mail:
    image: axllent/mailpit:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mail
    restart: on-failure
    networks:
      default:
      shared:
        aliases:
          - mail.${COMPOSE_PROJECT_NAME}.alias
    ports:
      - "${FORWARD_MAILPIT_PORT:-1025}:1025"
    volumes:
      - mail-data:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.mail-${COMPOSE_PROJECT_NAME}-secure.rule=Host(`mail.${COMPOSE_PROJECT_NAME}.docker`)
      - traefik.http.routers.mail-${COMPOSE_PROJECT_NAME}-secure.entrypoints=websecure
      - traefik.http.routers.mail-${COMPOSE_PROJECT_NAME}-secure.tls=true
      - traefik.http.services.mail-${COMPOSE_PROJECT_NAME}-secure.loadbalancer.server.port=8025
      - traefik.docker.network=network.${SHARED_SERVICES_NAMESPACE}

volumes:
  database-data:
    name: ${COMPOSE_PROJECT_NAME}-database-data
  redis-data:
    name: ${COMPOSE_PROJECT_NAME}-redis-data
  mail-data:
    name: ${COMPOSE_PROJECT_NAME}-mail-data

networks:
  shared:
    external: true
    name: network.${SHARED_SERVICES_NAMESPACE}
  default:
    name: project.${COMPOSE_PROJECT_NAME}

...
